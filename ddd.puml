@startuml create-transfers-flow.png
participant "org.axonframework.samples.bank.api.banktransfer\n**CreateBankTransferCommand**" as CreateBankTransferCommand
participant "org.axonframework.samples.bank.command\n**BankTransfer**" as BankTransfer
participant "org.axonframework.samples.bank.api.banktransfer\n**BankTransferCreatedEvent**" as BankTransferCreatedEvent
participant "org.axonframework.samples.bank.command\n**BankTransferManagementSaga**" as BankTransferManagementSaga
participant "org.axonframework.samples.bank.api.bankaccount\n**DebitSourceBankAccountCommand**" as DebitSourceBankAccountCommand
participant "org.axonframework.samples.bank.command\n**BankAccountCommandHandler**" as BankAccountCommandHandler
participant "org.axonframework.samples.bank.command\n**BankAccount**" as BankAccount
participant "org.axonframework.samples.bank.api.bankaccount\n**SourceBankAccountDebitedEvent**" as SourceBankAccountDebitedEvent
participant "org.axonframework.samples.bank.api.bankaccount\n**CreditDestinationBankAccountCommand**" as CreditDestinationBankAccountCommand
participant "org.axonframework.samples.bank.api.bankaccount\n**DestinationBankAccountCreditedEvent**" as DestinationBankAccountCreditedEvent
participant "org.axonframework.samples.bank.api.banktransfer\n**MarkBankTransferCompletedCommand**" as MarkBankTransferCompletedCommand
participant "org.axonframework.samples.bank.api.banktransfer\n**BankTransferCompletedEvent**" as BankTransferCompletedEvent
participant "org.axonframework.samples.bank.query.banktransfer\n**BankTransferEventListener**" as BankTransferEventListener
participant "org.axonframework.samples.bank.api.bankaccount\n**MoneyAddedEvent**" as MoneyAddedEvent
participant "org.axonframework.samples.bank.query.bankaccount\n**BankAccountEventListener**" as BankAccountEventListener
participant "org.axonframework.samples.bank.api.bankaccount\n**MoneySubtractedEvent**" as MoneySubtractedEvent
participant "org.axonframework.samples.bank.api.bankaccount\n**SourceBankAccountDebitRejectedEvent**" as SourceBankAccountDebitRejectedEvent
participant "org.axonframework.samples.bank.api.banktransfer\n**MarkBankTransferFailedCommand**" as MarkBankTransferFailedCommand
participant "org.axonframework.samples.bank.api.banktransfer\n**BankTransferFailedEvent**" as BankTransferFailedEvent

BankTransferController -> CreateBankTransferCommand: create
CreateBankTransferCommand --> BankTransfer: <init>
BankTransfer -> BankTransfer: create
BankTransfer -> BankTransferCreatedEvent: <init>
BankTransferCreatedEvent --> BankTransfer: on
BankTransferCreatedEvent --> BankTransferManagementSaga: on
BankTransferManagementSaga -> DebitSourceBankAccountCommand: create
DebitSourceBankAccountCommand --> BankAccountCommandHandler: handle
BankAccountCommandHandler -> BankAccount: create
BankAccount -> SourceBankAccountDebitedEvent: <init>
SourceBankAccountDebitedEvent --> BankTransferManagementSaga: on
BankTransferManagementSaga -> CreditDestinationBankAccountCommand: create
CreditDestinationBankAccountCommand --> BankAccountCommandHandler: handle
BankAccount -> DestinationBankAccountCreditedEvent: <init>
DestinationBankAccountCreditedEvent --> BankTransferManagementSaga: on
BankTransferManagementSaga -> MarkBankTransferCompletedCommand: create
MarkBankTransferCompletedCommand --> BankTransfer: handle
BankTransfer -> BankTransferCompletedEvent: <init>
BankTransferCompletedEvent --> BankTransfer: on
BankTransferCompletedEvent --> BankTransferEventListener: on
BankAccount -> MoneyAddedEvent: <init>
MoneyAddedEvent --> BankAccount: on
MoneyAddedEvent --> BankAccountEventListener: on
BankAccount -> MoneySubtractedEvent: <init>
MoneySubtractedEvent --> BankAccount: on
MoneySubtractedEvent --> BankAccountEventListener: on
BankAccount -> SourceBankAccountDebitRejectedEvent: <init>
SourceBankAccountDebitRejectedEvent --> BankTransferManagementSaga: on
BankTransferManagementSaga -> MarkBankTransferFailedCommand: create
MarkBankTransferFailedCommand --> BankTransfer: handle
BankTransfer -> BankTransferFailedEvent: <init>
BankTransferFailedEvent --> BankTransfer: on
BankTransferFailedEvent --> BankTransferEventListener: on
BankTransferCreatedEvent --> BankTransferEventListener: on
@enduml